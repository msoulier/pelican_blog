<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>But I Digress</title><link>http://www.but-i-digress.ca/</link><description></description><atom:link href="http://feeds.feedburner.com/ButIDigress" rel="self"></atom:link><lastBuildDate>Sun, 25 Nov 2012 09:00:00 -0500</lastBuildDate><item><title>Tweeting on OS X</title><link>http://www.but-i-digress.ca/tweeting-on-osx.html</link><description>&lt;p&gt;For some time my desktop has been an older, underpowered Linux box, so using
services like &lt;a class="reference external" href="http://www.twitter.com"&gt;Twitter&lt;/a&gt; via the website has been painful, as loaded with heavy
javascript that would consume my CPU's limited resources.&lt;/p&gt;
&lt;p&gt;So, like any &lt;a class="reference external" href="http://www.python.org"&gt;Python&lt;/a&gt; programmer would do, I wrote my own client. Well, lets be
honest, the hard work was done by the &lt;a class="reference external" href="https://github.com/tweepy/tweepy"&gt;tweepy&lt;/a&gt; library, I'm just using it. I
call it &lt;a class="reference external" href="https://github.com/msoulier/twit"&gt;Twit&lt;/a&gt;, and I've been using it to post for some time now, lightweight
from the command-line. I also keep one running, polling my account for new
posts, and notifying me when there are new posts and pulling them down.&lt;/p&gt;
&lt;p&gt;My notifications come in many forms, depending on the command-line options. I
can just watch them show up in text in the shell, I can use &lt;a class="reference external" href="http://freecode.com/projects/xosd"&gt;xosd&lt;/a&gt; to display
notifications on your X11 desktop, It can use &lt;a class="reference external" href="http://developer-next.gnome.org/libnotify/"&gt;libnotify&lt;/a&gt; in Gnome to display
temporary notifications that drop down in the corner of the screen.&lt;/p&gt;
&lt;p&gt;As I'm now playing with an OS X desktop, libnotify isn't supported. I could
use xosd along with &lt;a class="reference external" href="http://xquartz.macosforge.org/trac/wiki"&gt;XQuartz&lt;/a&gt;, but I'd prefer more native integration with OS
X, as it does have a notification system, via &lt;a class="reference external" href="https://developer.apple.com/library/mac/#releasenotes/Cocoa/AppKit.html"&gt;AppKit&lt;/a&gt;. Python is preinstalled
on OS X, and the AppKit module is included. I found a &lt;a class="reference external" href="https://github.com/albertz/music-player/blob/master/notifications.py"&gt;great example&lt;/a&gt; of how
to use it online, which made this much, much simpler, so thanks there.&lt;/p&gt;
&lt;p&gt;I used it like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;notify_appkit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Thanks to&lt;/span&gt;
&lt;span class="sd"&gt;    https://github.com/albertz/music-player/blob/master/notifications.py&lt;/span&gt;
&lt;span class="sd"&gt;    for how to do this.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;notifCenter&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;notifCenter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;AppKit&lt;/span&gt;
        &lt;span class="n"&gt;notifCenter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; \
            &lt;span class="n"&gt;AppKit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NSUserNotificationCenter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;defaultUserNotificationCenter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;appDelegate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AppKit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NSApplication&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sharedApplication&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delegate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;notifCenter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setDelegate_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;appDelegate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;notif&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AppKit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NSUserNotification&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Tweet by &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
    &lt;span class="n"&gt;notif&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setTitle_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;notif&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setInformativeText_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;notifCenter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deliverNotification_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;notif&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, this does cause a little icon on the dock to jump up and down, so I'll
need to look into that, and how to open the browser to twitter or the embedded
link when the notification is clicked on, but it's a good start.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael P. Soulier</dc:creator><pubDate>Sun, 25 Nov 2012 09:00:00 -0500</pubDate><guid>tag:www.but-i-digress.ca,2012-11-25:tweeting-on-osx.html</guid><category>OS X</category><category>Python</category></item><item><title>Suspend on lid close in Debian Squeeze</title><link>http://www.but-i-digress.ca/suspend-on-lid-close-debian-squeeze.html</link><description>&lt;p&gt;I recently decided that &lt;a class="reference external" href="http://www.gnome.org"&gt;Gnome&lt;/a&gt; is not the best desktop for my little &lt;a class="reference external" href="http://www.asus.com/Eee/"&gt;EeePC&lt;/a&gt;
netbook with a little 10.5&amp;quot; screen. So I'm playing around with a window
manager that mainly just maximizes everything. I've tried &lt;a class="reference external" href="http://www.nongnu.org/ratpoison/"&gt;Ratpoison&lt;/a&gt;, I've
tried &lt;a class="reference external" href="https://code.google.com/p/wmii/"&gt;wmii&lt;/a&gt;, and now I'm trying &lt;a class="reference external" href="http://awesome.naquadah.org/"&gt;Awesome&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have a lot of customizations to do, but one thing that was missing was a way
to suspend the netbook when the laptop lid is closed. I could manually run
&lt;tt class="docutils literal"&gt;acpitool &lt;span class="pre"&gt;-s&lt;/span&gt;&lt;/tt&gt; in a shell, or &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pm-suspend&lt;/span&gt;&lt;/tt&gt;, but it's best handled by DBus, as
intended.&lt;/p&gt;
&lt;p&gt;Now, a simple way to have DBus do the work is using &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dbus-send&lt;/span&gt;&lt;/tt&gt;, like so:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
dbus-send --print-reply \
          --system \
          --dest=org.freedesktop.UPower \
          /org/freedesktop/UPower \
          org.freedesktop.UPower.Suspend
&lt;/pre&gt;
&lt;p&gt;The hard part is subscribing to the lid close event, so I'm not polling all
the time, exactly what DBus was written to prevent. I had a Python script for
this, but the API was changed in Squeeze to use the &lt;a class="reference external" href="http://upower.freedesktop.org/"&gt;UPower&lt;/a&gt; daemon and API.&lt;/p&gt;
&lt;p&gt;I had to do some poking around to figure out how to update it, but I just got
it working, so I thought I'd share.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dbus&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;gobject&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dbus.mainloop.glib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DBusGMainLoop&lt;/span&gt;

&lt;span class="n"&gt;pow_prop_iface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;pow_iface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle_lidclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;closed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pow_prop_iface&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s"&gt;&amp;#39;LidIsClosed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;closed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;lid is closed, suspending&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;pow_iface&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Suspend&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;lid is open&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;pow_prop_iface&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pow_iface&lt;/span&gt;

    &lt;span class="n"&gt;DBusGMainLoop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;set_as_default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dbus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SystemBus&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;power_proxy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;org.freedesktop.UPower&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s"&gt;&amp;#39;/org/freedesktop/UPower&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;pow_prop_iface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dbus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Interface&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;power_proxy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                    &lt;span class="s"&gt;&amp;#39;org.freedesktop.DBus.Properties&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pow_iface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dbus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Interface&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;power_proxy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                               &lt;span class="s"&gt;&amp;#39;org.freedesktop.UPower&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Registering a signal receiver for upower events...&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_signal_receiver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle_lidclose&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="n"&gt;dbus_interface&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;org.freedesktop.UPower&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="n"&gt;signal_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Changed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


    &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gobject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MainLoop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now I just run it in the background from my &lt;cite&gt;.xsession&lt;/cite&gt; script at X11 login,
and it's sitting there waiting for any change in UPower status. Works like a
charm.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael P. Soulier</dc:creator><pubDate>Tue, 20 Nov 2012 22:10:00 -0500</pubDate><guid>tag:www.but-i-digress.ca,2012-11-20:suspend-on-lid-close-debian-squeeze.html</guid><category>Linux</category><category>Open Source</category><category>Python</category></item><item><title>Joysticks? We don't need no stinking joysticks...</title><link>http://www.but-i-digress.ca/apple-and-joysticks.html</link><description>&lt;p&gt;So, after unpackaging my brand-spanking new Mac Mini, I grabbed a copy of the
&lt;a class="reference external" href="http://www.x-plane.com"&gt;X-Plane&lt;/a&gt; demo, dropped in an old usb joystick and fired it up. Oddly, X-Plane
itself asked me if I wanted to calibrate the joystick, which struck me as odd,
that hasn't happened in years, not since my days with plain old DOS. DOS
didn't have a controller subsystem so there was no way to calibrate a joystick
once, for all apps, but Microsoft fixed that long, long ago. Even Linux has
&lt;a class="reference external" href="gentle-taiga-2880"&gt;jscal&lt;/a&gt; to allow the same thing. It's command-line, but it works.&lt;/p&gt;
&lt;p&gt;So of course I assumed that on a Mac, with it's reputation for dead simple
plug and play, everything just works, dead simple and easy, it would have the
same right? Umm, no. No command-line tool, no graphical tool, no voice
activated tool, no swiping on my LCD, nothing. It's left up to the
application, kinda like DOS. Way to go Apple.&lt;/p&gt;
&lt;p&gt;Now, why do I care, since X-Plane has such a utility? Well, in X-Plane, I
don't. But after downloading and installing Flightgear, I do. They leave the
joystick calibration up to the OS, and rightly so. So, I can't use the
joystick in Flightgear, not that I'd want to use it on this machine anyway, as
I've already found out that the OpenGL rendering performance on the Mac Mini
is horrid. Wow, another strike over my cheap Linux box sitting next to me that
was made out of spare parts from a friend's basement. That is truly, utterly,
sad.&lt;/p&gt;
&lt;p&gt;Seriously Apple, is that the best you can do? If you think I'm interested in
tilting an ipad to fly a plane in any realistic simulation, you guys have been
smoking way too much of what you usually smoke. I want realism, and last time
I flew, the pilot didn't have to lean to bank the plane. At least, I hope not,
the door was closed and locked, post-9/11 and all, but I digress.&lt;/p&gt;
&lt;p&gt;Bottom line Apple, for what I paid for this thing, you could have done much,
much better in this regard. X-Plane rocks, but Intel graphics in the mini?
Pleease, put a smoking Nvidia chipset in there and give me a decent framerate
for games!&lt;/p&gt;
&lt;p&gt;Are you listening?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael P. Soulier</dc:creator><pubDate>Mon, 19 Nov 2012 13:00:00 -0500</pubDate><guid>tag:www.but-i-digress.ca,2012-11-19:apple-and-joysticks.html</guid><category>OS X</category></item><item><title>Umm, done unzipping yet?</title><link>http://www.but-i-digress.ca/umm-done-unzipping-yet.html</link><description>&lt;p&gt;So, the first thing I did after after wrapping my head around the cocoa
interface was to start installing software like a madman. I wanted Firefox,
VLC, Kobo, Gimp, Vim, etc, etc, etc. So, I had to learn how to install apps on
OS X.&lt;/p&gt;
&lt;p&gt;Apps in OS X seem to come in at least two different forms: .app files, which
are self-contained application packages that you simply drop into
&lt;tt class="docutils literal"&gt;/Applications&lt;/tt&gt; on the system (totally awesome), and .pkg files, which are
more windows-like installers.&lt;/p&gt;
&lt;p&gt;The latter seems to be required with more complex installs, like plug-ins that
need to put files in privileged places all over the system, requiring root
access to install. As an admin user, I can already put .app files into
&lt;tt class="docutils literal"&gt;/Applications&lt;/tt&gt; without root access, the implications of which are that a
virus could infect the apps in &lt;tt class="docutils literal"&gt;/Applications&lt;/tt&gt; too, so that's a strike,
security-wise, for OS X over Linux. Still better than Windows though, where a
Power User can change anything under &lt;tt class="docutils literal"&gt;Program Files&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;Windows&lt;/tt&gt; without
escalating privileges.&lt;/p&gt;
&lt;p&gt;The .app files or .pkg files can come in many forms, the most common of which
is a .dmg file, which is a disk image that OS X will casually mount on a
loopback. I've noticed that the &lt;tt class="docutils literal"&gt;Finder&lt;/tt&gt; can mount .dmg and .iso files with
a simple click. With an .app file, you just drag it to &lt;tt class="docutils literal"&gt;/Applications&lt;/tt&gt;, and
you're done, and uninstalling is just a simple. Far superior to &lt;em&gt;any&lt;/em&gt; OS that
I've used in the past. It's also common to download .zip files, which clicking
on in the &lt;tt class="docutils literal"&gt;Finder&lt;/tt&gt; fires-up the &lt;tt class="docutils literal"&gt;Archive Utility&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;So there I was, clicking along and installing, and then a progress bar
indicating that the .zip file was opening just kept going, and going, and
going. I looked online, and found that &lt;a class="reference external" href="http://apple.stackexchange.com/questions/70160/can-i-fix-things-so-archive-utility-doesnt-hang-on-all-zip-files"&gt;I am not alone&lt;/a&gt; in having this
problem. Apparently, the &lt;tt class="docutils literal"&gt;appleeventsd&lt;/tt&gt; daemon requires killing under those
circumstances, something that the nice guy at Apple support did not know.
Looks like the issue is in OS X 10.8.2, which I am running.&lt;/p&gt;
&lt;p&gt;Hmm. Bad timing in jumping on the Apple bandwagon? I wonder how long they'll
take to fix the issue. Good test for what it will be like to live as part of
Apple's ecosystem.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael P. Soulier</dc:creator><pubDate>Sat, 17 Nov 2012 14:00:00 -0500</pubDate><guid>tag:www.but-i-digress.ca,2012-11-17:umm-done-unzipping-yet.html</guid><category>OS X</category></item><item><title>Ok, nobody panic, there's a fruit on my screen</title><link>http://www.but-i-digress.ca/fruit-on-my-screen.html</link><description>&lt;p&gt;I've needed a new desktop for a while now. As I'm primarily a Unix user, I
typically buy a cheap PC and put &lt;a class="reference external" href="http://www.linux.org"&gt;Linux&lt;/a&gt; on it. This involves doing a bunch of
research into available hardware to make sure that everything is going to
work, like accelerated graphics for any games I'd like to play, supported
network drivers, etc. Over the years it's gotten easier and easier to get
Linux working on a box, but sometimes I still have to work to get something
working.&lt;/p&gt;
&lt;p&gt;The end result is a working Linux workstation that I can use for work, and my
basic computing needs, often involving fighting with the fact that noone wants
to support it or any software that I'm using. That part does get old year
after year.&lt;/p&gt;
&lt;p&gt;For example, I bought a &lt;a class="reference external" href="http://www.kobobooks.com"&gt;Kobo&lt;/a&gt; ages ago, and I had to use a Windows box to run
the Kobo desktop software, to patch its firmware and put books on it. Later I
found out that I could just copy .epub books into it like a flash drive, which
is awesome by the way Kobo, but you get the idea. For my iPod shuffle, I copy
mp3s onto it and run the rebuild_db Python script to update the db on the
iPod. There are workarounds for these issues, but sometimes it's nice to just
plug something in and have it work. And fighting with my devices isn't as much
fun as it used to be. I'm too damn busy.&lt;/p&gt;
&lt;p&gt;So, based the recommendations of various friends and colleagues, I decided to
take the plunge with my new desktop, and try a &lt;a class="reference external" href="http://www.apple.com/mac-mini/"&gt;Mac Mini&lt;/a&gt; from &lt;a class="reference external" href="http://www.apple.com"&gt;Apple&lt;/a&gt;, running
&lt;a class="reference external" href="http://www.apple.com/osx/"&gt;Mac OS X&lt;/a&gt; 10.8, &amp;quot;Mountain Lion&amp;quot;. I figured that it's a lot better supported
in commercial software land, while being &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Darwin_%28operating_system%29"&gt;BSD Unix&lt;/a&gt; underneath, so maybe it's
the best of both worlds.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="http://www.but-i-digress.ca/static/images/apple-logo1.jpg" src="http://www.but-i-digress.ca/static/images/apple-logo1.jpg" style="width: 289px; height: 350px;" /&gt;
&lt;/div&gt;
&lt;p&gt;I need to customize the crap out of it, and get used to the interface and
keybindings, and do a lot of reading. I hope to post my experiences here, so
stay tuned if you're interested.&lt;/p&gt;
&lt;p&gt;Sure, I could have just thrown Linux on another box, and maybe I still will,
but I've &lt;em&gt;done&lt;/em&gt; that. I felt like doing something new.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael P. Soulier</dc:creator><pubDate>Fri, 16 Nov 2012 18:00:00 -0500</pubDate><guid>tag:www.but-i-digress.ca,2012-11-16:fruit-on-my-screen.html</guid><category>OS X</category></item><item><title>What Curling has taught me about life</title><link>http://www.but-i-digress.ca/curling-and-life.html</link><description>&lt;p&gt;I've been curling for about 4 years now, and it's already taught me a lot
about life. I thought I'd share some of what it has taught me:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;balance is very important&lt;/li&gt;
&lt;li&gt;anything worthwhile requires hard work&lt;/li&gt;
&lt;li&gt;you often can't brute force your way out of a problem&lt;/li&gt;
&lt;li&gt;you must think before you act&lt;/li&gt;
&lt;li&gt;you can often do much more with help from others&lt;/li&gt;
&lt;li&gt;shouting at people doesn't actually make them work harder&lt;/li&gt;
&lt;li&gt;hope for the best and plan for the worst&lt;/li&gt;
&lt;li&gt;when you finally understand the conditions, they change&lt;/li&gt;
&lt;li&gt;don't take anything too seriously&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;and finally&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;men can still look like men while holding a broom :)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Cheers&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael P. Soulier</dc:creator><pubDate>Fri, 09 Nov 2012 10:00:00 -0500</pubDate><guid>tag:www.but-i-digress.ca,2012-11-09:curling-and-life.html</guid><category>Curling</category><category>Hobbies</category></item><item><title>I sit too much</title><link>http://www.but-i-digress.ca/i-sit-too-much.html</link><description>&lt;p&gt;Yeah, I really do. From my childhood I always prefered more intellectual
activities than active ones, reading, watching movies, tv. Growing up
asthmatic had something to do with that, but I overcame it later in life and
had no excuses anymore. Still, studies to do, computers to play with, digital
bad guys to beat up, and a lot of my activities involved sitting.&lt;/p&gt;
&lt;p&gt;I played baseball as a kid, got into Tae kwon Do in my late teens, but as a
University student I couldn't afford the money to continue, and I moved a lot
for a while. I was never much of a runner, but for a while I was a damn good
cyclist because I didn't have a car and it was how I got around.&lt;/p&gt;
&lt;p&gt;In recent years a back injury made it clear that I sit too much, and I've
tried various things to try to fix it, usually charging in too fast,
determined to conquer the problem and I ended up with another injury. I needed
to figure out how to go slower, targeting my problems and not doing too much,
but making progress.&lt;/p&gt;
&lt;p&gt;Recently the wife that I don't deserve found &lt;a class="reference external" href="http://www.athlete365.com/"&gt;Athlete365&lt;/a&gt; and Mr. John
Sokolowski. He looked at my flexibility and strength, or lack thereof, and has
put together an evolving program to help me fix them, at a speed that won't
set me back with another injury. He also gave me some tools to help with
muscles that keep me awake at night, ruining my sleep. He also thinks that I
should become a Yoga master. Heh...sure John. Maybe in 20 years of practice.
I'm right on that.&lt;/p&gt;
&lt;p&gt;I've also been tweaking my diet, not that my diet was bad, but I recently
found out about some of the evils of excessive carbohydrates, from an amusing
documentary, &lt;a class="reference external" href="http://www.fathead-movie.com/"&gt;Fat Head&lt;/a&gt;, a response to &amp;quot;Supersize Me&amp;quot;. Since reducing
bread (not hard, I have a gluten tolerance issue), rice and potatoes in my
diet, and exercising more, I've lost about ten pounds in the past couple of
months.&lt;/p&gt;
&lt;p&gt;My issues aren't gone by any means, I have a lot of work to do, but guidance
helps. There's a difference between working hard and working smart.
Previously, I was just working hard.&lt;/p&gt;
&lt;p&gt;If you've read this sitting down, get up and move around. Trust me.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael P. Soulier</dc:creator><pubDate>Thu, 08 Nov 2012 12:00:00 -0500</pubDate><guid>tag:www.but-i-digress.ca,2012-11-08:i-sit-too-much.html</guid><category>Health</category></item><item><title>21st Century C</title><link>http://www.but-i-digress.ca/21st-century-c.html</link><description>&lt;p&gt;I saw a sale from &lt;a class="reference external" href="http://oreilly.com/"&gt;O'Reilly Publishing&lt;/a&gt; tonight on an new ebook for
&lt;a class="reference external" href="http://shop.oreilly.com/product/0636920025108.do?code=WKCPRGM"&gt;21st Century C&lt;/a&gt;. I have a good history with O'Reilly and C programming, so
it caught my attention.&lt;/p&gt;
&lt;p&gt;When I was in University, &lt;a class="reference external" href="http://shop.oreilly.com/product/9781565923065.do?code=WKCPRGM"&gt;Practical C Programming&lt;/a&gt;
taught me much more than any of my professors, and
&lt;a class="reference external" href="http://shop.oreilly.com/product/9781565921634.do"&gt;Unix System Programming for System VR4&lt;/a&gt; taught me a great deal more about
programming C on Unix/Linux. After reading those books, I became actually
comfortable in working in C for all of my assignments, and other students
kept coming to me for help until I had somehow become a local C expert.
Amazing what a good investment in reading material will do, not to mention
actually reading said material. Another friend in University taught me that.
He told me not to ever begrudge the cost of a book that helps you get better
at what you do. I've applied that lesson ever since.&lt;/p&gt;
&lt;p&gt;I relied on O'Reilly for my first introduction to C++, with
&lt;a class="reference external" href="http://shop.oreilly.com/product/9781565921160.do"&gt;C++, the Core Language&lt;/a&gt;, which finally explained to me where some of my
memory leaks were coming from, by explaining copy constructors and assignment
operators. I turned to &lt;a class="reference external" href="http://books.google.com/books/about/Beginning_C++.html?id=vtcpAQAAMAAJ"&gt;another book&lt;/a&gt; to finish most of my C++ education, but
O'Reilly got me started.&lt;/p&gt;
&lt;p&gt;Since University, with the wealth of information on the Internet, I haven't
bought many C books, but I did pick up &lt;a class="reference external" href="http://basepath.com/aup/"&gt;Advanced Unix Programming&lt;/a&gt;, second
edition, on the recommendation of a coworker, and he did not lead me astray,
the book is excellent. Mind you, I still haven't finished reading it. I seem
to buy books faster than I read them these days.&lt;/p&gt;
&lt;p&gt;Maybe one day I'll take a little vacation just to read. Anyway...&lt;/p&gt;
&lt;p&gt;Looking at the new O'Reilly book, it looks like it has many practical ideas
for someone living with C from day to day, and should also provide a nice
introduction to the new C11 standard, just released in December of last year.
Hopefully it'll sharpen my skills like previous O'Reilly books have. I'll try
to post a full review once I've finished it...err...if I finish it.&lt;/p&gt;
&lt;p&gt;I will stop buying faster than I can read. I will stop buying faster than I
can read. Maybe if I keep repeating that, it'll sink in.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael P. Soulier</dc:creator><pubDate>Tue, 06 Nov 2012 22:12:00 -0500</pubDate><guid>tag:www.but-i-digress.ca,2012-11-06:21st-century-c.html</guid><category>C/C++</category><category>Books</category></item><item><title>Dusting off old games</title><link>http://www.but-i-digress.ca/dusting-off-old-games.html</link><description>&lt;p&gt;Back before I had any real responsibilities, I spent a lot of time playing
various games. I've probably played most of them. Roleplaying games, tabletop
battle simulations, although I stayed away from the card games like &lt;a class="reference external" href="http://www.wizards.com/Magic/Summoner/"&gt;Magic&lt;/a&gt;.
I'll rant about that some other time.&lt;/p&gt;
&lt;p&gt;My two favorite games were &lt;a class="reference external" href="http://boardgamegeek.com/thread/474579/air-superiority-playable-jet-combat"&gt;Air Superiority&lt;/a&gt;, and &lt;a class="reference external" href="http://www.starfleetgames.com"&gt;Starfleet Battles&lt;/a&gt;. As a
science fiction fan, I did like Star Trek, and like a lot of boys my favorite
parts were the ship to ship combat. SFB simulated that combat better than I'd
ever seen before, and even spun off a pretty cool &lt;a class="reference external" href="http://www.youtube.com/watch?v=HwQ3rm0LcWU"&gt;video game&lt;/a&gt; that spawned a
couple of sequels. I still have the first one.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="http://www.but-i-digress.ca/static/images/sfb.png" src="http://www.but-i-digress.ca/static/images/sfb.png" style="width: 800px; height: 478px;" /&gt;
&lt;/div&gt;
&lt;p&gt;The tabletop game was as complex as any chess game, and a lot more fun in my
opinion, so it was with no small amount of nostalgia that I dusted off the
game for my 10-year-old son and I to look at a couple of months ago. To my
surprise, Jaan ate the game up, even if the rules sound like legalese and
combined weigh a few pounds. Now he can't get enough of the game, and I get to
play too, which is pretty cool, 'cause I don't have a lot of time for these
things anymore and I wasn't sure if anyone around Ottawa played it anyway.&lt;/p&gt;
&lt;p&gt;I'm not really interested in all of the new material that ADB has released
since I was into the game, as I have plenty of material for it already, and
it'll take Jaan and I ages to get tired of it. The physics of the game are
broken and there are holes in the logic that I'll go into later, but it
suceeds in providing a fun gaming experience, and it's a hell of a lot more
fun than playing Monopoly or Clue, with all due respect to those games.&lt;/p&gt;
&lt;p&gt;Lets be honest, in the end, boys don't grow up, our toys just get more
expensive.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael P. Soulier</dc:creator><pubDate>Sun, 04 Nov 2012 18:43:00 -0500</pubDate><guid>tag:www.but-i-digress.ca,2012-11-04:dusting-off-old-games.html</guid><category>Hobbies</category><category>SFB</category></item><item><title>New blog</title><link>http://www.but-i-digress.ca/new-static-blog.html</link><description>&lt;p&gt;So I decided to dump Wordpress and go to something that I have more control
over. I was thinking of building my own static blogging system, but I looked
around and found that there are a few already. Being a fan of &lt;a class="reference external" href="http://www.python.org/"&gt;Python&lt;/a&gt; I
decided to try out &lt;a class="reference external" href="http://docs.getpelican.com/en/3.0/"&gt;Pelican&lt;/a&gt;. It uses a bunch of technology that I would use
anyway, like &lt;a class="reference external" href="http://docutils.sourceforge.net/docs/user/rst/quickref.html"&gt;reStructuredText&lt;/a&gt;, &lt;a class="reference external" href="http://jinja.pocoo.org/"&gt;Jinja2&lt;/a&gt;, etc.&lt;/p&gt;
&lt;p&gt;It also gives me an excuse to play with &lt;a class="reference external" href="http://heroku.com/"&gt;Heroku&lt;/a&gt; for hosting. Which, I must
say, is pretty cool for getting a website or web service hosted quickly, with
nothing but a push from &lt;a class="reference external" href="http://git-scm.com/"&gt;Git&lt;/a&gt; to trigger the publishing of the site.&lt;/p&gt;
&lt;p&gt;Granted, Heroku was meant to host dynamic sites driven by WSGI apps, but I
found a &lt;a class="reference external" href="http://kennethreitz.com/static-sites-on-heroku-cedar.html"&gt;great hack&lt;/a&gt; to fool Heroku
into running a static site.&lt;/p&gt;
&lt;p&gt;So, we'll see how this goes. My main blogging tools now are &lt;a class="reference external" href="http://www.vim.org/"&gt;Vim&lt;/a&gt; and &lt;a class="reference external" href="http://git-scm.com/"&gt;Git&lt;/a&gt;, so
how can I go wrong?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael P. Soulier</dc:creator><pubDate>Sat, 03 Nov 2012 10:20:00 -0400</pubDate><guid>tag:www.but-i-digress.ca,2012-11-03:new-static-blog.html</guid><category>Blogging</category><category>Python</category></item></channel></rss>